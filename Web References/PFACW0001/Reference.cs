//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.5466
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=2.0.50727.5466.
// 
#pragma warning disable 1591

namespace Portal_GEFACE.PFACW0001 {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsFacturaElectronicaSoap", Namespace="http://cdinet/")]
    public partial class wsFacturaElectronica : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback PFACO0001OperationCompleted;
        
        private System.Threading.SendOrPostCallback RegistraDocumentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegistraLoteDocumentosOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsFacturaElectronica() {
            this.Url = global::Portal_GEFACE.Properties.Settings.Default.Portal_GEFACE_PFACW0001_wsFacturaElectronica;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event PFACO0001CompletedEventHandler PFACO0001Completed;
        
        /// <remarks/>
        public event RegistraDocumentoCompletedEventHandler RegistraDocumentoCompleted;
        
        /// <remarks/>
        public event RegistraLoteDocumentosCompletedEventHandler RegistraLoteDocumentosCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cdinet/PFACO0001", RequestNamespace="http://cdinet/", ResponseNamespace="http://cdinet/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RespuestaGeneral PFACO0001(string fechaInicial, string fechaFinal, string tipoDocumento) {
            object[] results = this.Invoke("PFACO0001", new object[] {
                        fechaInicial,
                        fechaFinal,
                        tipoDocumento});
            return ((RespuestaGeneral)(results[0]));
        }
        
        /// <remarks/>
        public void PFACO0001Async(string fechaInicial, string fechaFinal, string tipoDocumento) {
            this.PFACO0001Async(fechaInicial, fechaFinal, tipoDocumento, null);
        }
        
        /// <remarks/>
        public void PFACO0001Async(string fechaInicial, string fechaFinal, string tipoDocumento, object userState) {
            if ((this.PFACO0001OperationCompleted == null)) {
                this.PFACO0001OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPFACO0001OperationCompleted);
            }
            this.InvokeAsync("PFACO0001", new object[] {
                        fechaInicial,
                        fechaFinal,
                        tipoDocumento}, this.PFACO0001OperationCompleted, userState);
        }
        
        private void OnPFACO0001OperationCompleted(object arg) {
            if ((this.PFACO0001Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PFACO0001Completed(this, new PFACO0001CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cdinet/RegistraDocumento", RequestNamespace="http://cdinet/", ResponseNamespace="http://cdinet/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RespuestaGeneral RegistraDocumento(string pCompania, string pNoDocumento, string pEstadoDocumento, string pInventario, string pTipoDocumento, string pUsuario, string pFechaDocumento) {
            object[] results = this.Invoke("RegistraDocumento", new object[] {
                        pCompania,
                        pNoDocumento,
                        pEstadoDocumento,
                        pInventario,
                        pTipoDocumento,
                        pUsuario,
                        pFechaDocumento});
            return ((RespuestaGeneral)(results[0]));
        }
        
        /// <remarks/>
        public void RegistraDocumentoAsync(string pCompania, string pNoDocumento, string pEstadoDocumento, string pInventario, string pTipoDocumento, string pUsuario, string pFechaDocumento) {
            this.RegistraDocumentoAsync(pCompania, pNoDocumento, pEstadoDocumento, pInventario, pTipoDocumento, pUsuario, pFechaDocumento, null);
        }
        
        /// <remarks/>
        public void RegistraDocumentoAsync(string pCompania, string pNoDocumento, string pEstadoDocumento, string pInventario, string pTipoDocumento, string pUsuario, string pFechaDocumento, object userState) {
            if ((this.RegistraDocumentoOperationCompleted == null)) {
                this.RegistraDocumentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegistraDocumentoOperationCompleted);
            }
            this.InvokeAsync("RegistraDocumento", new object[] {
                        pCompania,
                        pNoDocumento,
                        pEstadoDocumento,
                        pInventario,
                        pTipoDocumento,
                        pUsuario,
                        pFechaDocumento}, this.RegistraDocumentoOperationCompleted, userState);
        }
        
        private void OnRegistraDocumentoOperationCompleted(object arg) {
            if ((this.RegistraDocumentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegistraDocumentoCompleted(this, new RegistraDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cdinet/RegistraLoteDocumentos", RequestNamespace="http://cdinet/", ResponseNamespace="http://cdinet/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RespuestaGeneral RegistraLoteDocumentos(string tipoDocumento, string Compania, string tipoInventario, string fecha_inicio, string fecha_fin, string usuario) {
            object[] results = this.Invoke("RegistraLoteDocumentos", new object[] {
                        tipoDocumento,
                        Compania,
                        tipoInventario,
                        fecha_inicio,
                        fecha_fin,
                        usuario});
            return ((RespuestaGeneral)(results[0]));
        }
        
        /// <remarks/>
        public void RegistraLoteDocumentosAsync(string tipoDocumento, string Compania, string tipoInventario, string fecha_inicio, string fecha_fin, string usuario) {
            this.RegistraLoteDocumentosAsync(tipoDocumento, Compania, tipoInventario, fecha_inicio, fecha_fin, usuario, null);
        }
        
        /// <remarks/>
        public void RegistraLoteDocumentosAsync(string tipoDocumento, string Compania, string tipoInventario, string fecha_inicio, string fecha_fin, string usuario, object userState) {
            if ((this.RegistraLoteDocumentosOperationCompleted == null)) {
                this.RegistraLoteDocumentosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegistraLoteDocumentosOperationCompleted);
            }
            this.InvokeAsync("RegistraLoteDocumentos", new object[] {
                        tipoDocumento,
                        Compania,
                        tipoInventario,
                        fecha_inicio,
                        fecha_fin,
                        usuario}, this.RegistraLoteDocumentosOperationCompleted, userState);
        }
        
        private void OnRegistraLoteDocumentosOperationCompleted(object arg) {
            if ((this.RegistraLoteDocumentosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegistraLoteDocumentosCompleted(this, new RegistraLoteDocumentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cdinet/")]
    public partial class RespuestaGeneral {
        
        private object respuestaField;
        
        private bool resultadoField;
        
        private string mensajeField;
        
        /// <comentarios/>
        public object Respuesta {
            get {
                return this.respuestaField;
            }
            set {
                this.respuestaField = value;
            }
        }
        
        /// <comentarios/>
        public bool Resultado {
            get {
                return this.resultadoField;
            }
            set {
                this.resultadoField = value;
            }
        }
        
        /// <comentarios/>
        public string Mensaje {
            get {
                return this.mensajeField;
            }
            set {
                this.mensajeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void PFACO0001CompletedEventHandler(object sender, PFACO0001CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PFACO0001CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PFACO0001CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RespuestaGeneral Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RespuestaGeneral)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RegistraDocumentoCompletedEventHandler(object sender, RegistraDocumentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegistraDocumentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegistraDocumentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RespuestaGeneral Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RespuestaGeneral)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RegistraLoteDocumentosCompletedEventHandler(object sender, RegistraLoteDocumentosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegistraLoteDocumentosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegistraLoteDocumentosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RespuestaGeneral Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RespuestaGeneral)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591